		  
-- Roo log
query Ecore2Roo = Ecore!EPackage.allInstances() ->
    iterate(package; acc: String = '' | acc + package.toString() + '\n') -> println();
		
uses Enum;
uses Entity;

-- Project
helper context Ecore!EPackage def: toString(): String =
    if self.name <> 'ecore' then 
		'project ' + '--topLevelPackage mx.itesm.' + self.name + 'bus\n\n' +
			'persistence setup' + ' --provider HIBERNATE --database HYPERSONIC_IN_MEMORY \n' +
			'jaxb xsd compiler setup --generateDirectory src/main/java \n' +
			'http resource representation setup\n\n'
		
		+ 'enum type --class mx.itesm.' + self.name + 'bus.domain.ToolName\n'
		+ 'enum constant --name Spring\n'
		+ 'enum constant --name Eclipse\n\n'

		+ 'entity --class mx.itesm.' + self.name + 'bus.domain.Tool\n'
		+ 'field enum --fieldName name --type mx.itesm.' + self.name + 'bus.domain.ToolName\n'
		+ 'field string --fieldName description\n'
		+ 'field string --fieldName ipAddress\n'
		+ 'field string --fieldName port\n'
		+ 'field string --fieldName contextPath\n'
		+ 'controller all --package mx.itesm.' + self.name + 'bus.web\n\n'
			
		+ '//Notification scheduling\n'	
			
		+ 'enum type --class mx.itesm.' + self.name + 'bus.domain.ImbNotificationType\n'
		+ 'enum constant --name CreateEntity\n'
		+ 'enum constant --name UpdateEntity\n'
		+ 'enum constant --name DeleteEntity\n\n'

		+ 'entity --class mx.itesm.' + self.name + 'bus.domain.ImbNotification\n'
		+ 'field string --fieldName url\n'
		+ 'field string --fieldName entity\n'
		+ 'field string --fieldName entityName\n'
		+ 'field string --fieldName returnTypeClass\n'
		+ 'field number --fieldName entityId --type java.lang.Long\n'
		+ 'field enum --type mx.itesm.' + self.name + 'bus.domain.ImbNotificationType --fieldName type\n'
		+ 'imb generate notificationScheduling\n\n'
		
		+ '// Execute ImbBusController\n'
		+ '// Execute: roo perform eclipse\n'
    else ''
    endif;